name: Deploy to FTP

on:
  # pull_request:
  push:
    branches: ["main"]
  # pull_request:
  # workflow_run:
  #   workflows: ["Frontend CI"]
  #   types:
  #     - completed

jobs:
  verify-secrets:
    # if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Verify secrets
        run: |
          if [ -z "${{ secrets.FTP_SERVER }}" ]; then echo "FTP_SERVER is not set"; exit 1; fi
          if [ -z "${{ secrets.FTP_USERNAME }}" ]; then echo "FTP_USERNAME is not set"; exit 1; fi
          if [ -z "${{ secrets.FTP_PASSWORD }}" ]; then echo "FTP_PASSWORD is not set"; exit 1; fi
          echo "All required secrets are set"

  clean-server:
    runs-on: ubuntu-latest
    needs: verify-secrets

    steps:
      - name: Install lftp
        run: sudo apt-get install -y lftp

      - name: Delete _next directory from FTP server
        run: |
          lftp -c "set ftp:list-options -a;
                   open ftp://$FTP_USERNAME:$FTP_PASSWORD@$FTP_SERVER;
                   rm -rf /home/shirokanecpa/www/_next;
                   rm -rf /home/shirokanecpa/www/next.svg;
                   rm -rf /home/shirokanecpa/www/vercel.svg;
                   rm -rf /home/shirokanecpa/www/.ftp-deploy-sync-state.json;
                   rm -rf /home/shirokanecpa/www/404.html;
                   rm -rf /home/shirokanecpa/www/index.html;
                   bye"
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}

  deploy-sync-files:
    runs-on: ubuntu-latest
    needs: clean-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8.6.6
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        working-directory: ./frontend

      - name: Build project
        run: pnpm run build
        working-directory: ./frontend

      - name: Sync files to FTP server
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "./frontend/out/"
          server-dir: "/home/shirokanecpa/www/"
          exclude: |
            **/.git*
            **/.git*/**
            **/.env
            **/.env.local
            **/.env.*.local
            **/.DS_Store
            **/node_modules**
            **/node_modules/**
            **/.vscode
            **/.github
            **/.gitignore
            **/rules
            **/.eslintrc.js
            **/README.md
            **/LICENSE
            **/wp-config.php
            **/uploads/**/*.tmp
            **/uploads/**/*.bak
            **/uploads/**/*.backup
            **/*.log
            **/*.tmp
            **/package-lock.json
            **/pnpm-lock.yaml
            **/yarn.lock
